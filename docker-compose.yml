services:
 frontend:
  build:
    context: ./frontend
  volumes:
    - ./frontend:/app
    - /app/node_modules
  ports:
    - "3000:3000"
  working_dir: /app
  command: npm start
  networks:
   - app_network
 
 web:
  build: .
  volumes:
   - .:/app
  ports:
   - "5000:5000"
  depends_on:
   postgres:
    condition: service_healthy
  command: python /app/src/recommenderapp/app.py
  networks:
   - app_network

 postgres:
  image: postgres:latest
  environment:
   - POSTGRES_USER=${POSTGRES_USER}
   - POSTGRES_PASSWORD=${POSTGRES_PW}
   - POSTGRES_DB=${POSTGRES_DB}
  ports:
   - "5432:5432"
  healthcheck:
   test: ["CMD","pg_isready","-U","${POSTGRES_USER}"]
   interval: 10s
   timeout: 5s
   retries: 5
  networks:
      - app_network
  volumes:
      - postgres_data:/var/lib/postgresql/data

 pgadmin:
  container_name: pgadmin
  image: dpage/pgadmin4:latest
  environment:
   - PGADMIN_DEFAULT_EMAIL=${PGADMIN_MAIL}
   - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PW}
  ports:
   - "5050:80"
  networks:
      - app_network

networks:
 app_network:
  name: app_network
  driver: bridge

volumes:
  postgres_data: